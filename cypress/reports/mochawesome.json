{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-04-27T22:14:54.714Z",
    "end": "2022-04-27T22:17:46.195Z",
    "duration": 171481,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2891bc07-b192-456e-936c-55c06c9b5649",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "07eab3e0-ef50-4389-8eea-501e5c6d26f7",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 2198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "7dd49480-823b-439c-ac53-0c8cece8a50b",
              "parentUUID": "07eab3e0-ef50-4389-8eea-501e5c6d26f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7dd49480-823b-439c-ac53-0c8cece8a50b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2198,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4ea0ae47-9c25-4a61-94bc-3b94b19e354f",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 1783,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "756aad15-f7ab-42cb-a68f-01d3b87b568c",
              "parentUUID": "4ea0ae47-9c25-4a61-94bc-3b94b19e354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 1468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "e7e142e8-2610-4565-ab5a-40f5cff8316e",
              "parentUUID": "4ea0ae47-9c25-4a61-94bc-3b94b19e354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 899,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "9e3123c6-8f3b-435d-a32a-e922770deb30",
              "parentUUID": "4ea0ae47-9c25-4a61-94bc-3b94b19e354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 947,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "3a5dde3a-363c-4351-810d-a40a8daa8c7b",
              "parentUUID": "4ea0ae47-9c25-4a61-94bc-3b94b19e354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 976,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "6edfe92a-bee9-4dba-a8fc-60cba679e5e9",
              "parentUUID": "4ea0ae47-9c25-4a61-94bc-3b94b19e354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 798,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "35e88a54-cfe0-4337-8da9-bb4b78a425ad",
              "parentUUID": "4ea0ae47-9c25-4a61-94bc-3b94b19e354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 662,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "ca831be3-5c98-4d76-a800-8d8182499996",
              "parentUUID": "4ea0ae47-9c25-4a61-94bc-3b94b19e354f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "756aad15-f7ab-42cb-a68f-01d3b87b568c",
            "e7e142e8-2610-4565-ab5a-40f5cff8316e",
            "9e3123c6-8f3b-435d-a32a-e922770deb30",
            "3a5dde3a-363c-4351-810d-a40a8daa8c7b",
            "6edfe92a-bee9-4dba-a8fc-60cba679e5e9",
            "35e88a54-cfe0-4337-8da9-bb4b78a425ad",
            "ca831be3-5c98-4d76-a800-8d8182499996"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7533,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b389abf-3aa4-4713-837a-2f8cc64bd5bf",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 567,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "e79c2632-f245-4a55-8849-ad1fccf9bc3d",
              "parentUUID": "6b389abf-3aa4-4713-837a-2f8cc64bd5bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 1354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "9a82438c-4c9a-46f6-b4a8-e1005a66c900",
              "parentUUID": "6b389abf-3aa4-4713-837a-2f8cc64bd5bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e79c2632-f245-4a55-8849-ad1fccf9bc3d",
            "9a82438c-4c9a-46f6-b4a8-e1005a66c900"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1921,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "463d800f-484d-4e8d-be9c-810a48497ece",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 660,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "d932f0f9-9ad1-44fe-8d83-88161b58fee2",
              "parentUUID": "463d800f-484d-4e8d-be9c-810a48497ece",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 602,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "cb2d9ef8-b3b7-45d9-b4c7-3117e9ec2ba1",
              "parentUUID": "463d800f-484d-4e8d-be9c-810a48497ece",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 1227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "6424f43e-fd33-4295-9c2e-8c7d2ed9bd58",
              "parentUUID": "463d800f-484d-4e8d-be9c-810a48497ece",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 663,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "2037a988-aa69-47ea-b70b-1942ce61d1ec",
              "parentUUID": "463d800f-484d-4e8d-be9c-810a48497ece",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d932f0f9-9ad1-44fe-8d83-88161b58fee2",
            "cb2d9ef8-b3b7-45d9-b4c7-3117e9ec2ba1",
            "6424f43e-fd33-4295-9c2e-8c7d2ed9bd58",
            "2037a988-aa69-47ea-b70b-1942ce61d1ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3152,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d28fba17-ea1c-4621-a9dd-74ec23c301f2",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 2011,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "8214b8a6-619e-451d-80a2-98be98d0a386",
              "parentUUID": "d28fba17-ea1c-4621-a9dd-74ec23c301f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1855,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "4ce356c5-37db-4576-ab6f-e61c7717fe8a",
              "parentUUID": "d28fba17-ea1c-4621-a9dd-74ec23c301f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8214b8a6-619e-451d-80a2-98be98d0a386",
            "4ce356c5-37db-4576-ab6f-e61c7717fe8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3866,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e45a61b2-672c-45ad-8f89-00840440b835",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 1104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5cb0ef97-5ca0-4405-bbd1-65537c364e1f",
              "parentUUID": "e45a61b2-672c-45ad-8f89-00840440b835",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 826,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "10ac3f86-c5a9-4405-ac19-91c7cdc5647b",
              "parentUUID": "e45a61b2-672c-45ad-8f89-00840440b835",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cb0ef97-5ca0-4405-bbd1-65537c364e1f",
            "10ac3f86-c5a9-4405-ac19-91c7cdc5647b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1930,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "08e91ff4-686c-478c-9599-06101a30ea20",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1562,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "a5270c32-2b98-41b1-9f88-608413cb4939",
              "parentUUID": "08e91ff4-686c-478c-9599-06101a30ea20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 12111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "664a3a75-d545-4d44-a90e-bb4145fbb34a",
              "parentUUID": "08e91ff4-686c-478c-9599-06101a30ea20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5270c32-2b98-41b1-9f88-608413cb4939",
            "664a3a75-d545-4d44-a90e-bb4145fbb34a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13673,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d0bedd28-fca7-4a0a-87be-2028be2e7e77",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 3083,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "89b361c3-7df5-46b7-a0c3-6b83883f2f9d",
              "parentUUID": "d0bedd28-fca7-4a0a-87be-2028be2e7e77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 11138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "c622c5c1-3ab5-4798-b3e8-e1b0b8b8c01c",
              "parentUUID": "d0bedd28-fca7-4a0a-87be-2028be2e7e77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 5253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "40230980-1aa1-4582-bfda-fe80d5564d74",
              "parentUUID": "d0bedd28-fca7-4a0a-87be-2028be2e7e77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89b361c3-7df5-46b7-a0c3-6b83883f2f9d",
            "c622c5c1-3ab5-4798-b3e8-e1b0b8b8c01c",
            "40230980-1aa1-4582-bfda-fe80d5564d74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19474,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "08ec44bd-86d9-4c70-b73a-4ec216c6b64f",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 1205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "727443a3-c3e2-4f15-85f8-8fb96ad91962",
              "parentUUID": "08ec44bd-86d9-4c70-b73a-4ec216c6b64f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "faf15c31-9099-4702-be13-2b0f6e4fd7fd",
              "parentUUID": "08ec44bd-86d9-4c70-b73a-4ec216c6b64f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "c5db27b6-e3df-4154-b5e9-36350c8689a1",
              "parentUUID": "08ec44bd-86d9-4c70-b73a-4ec216c6b64f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 4578,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "eca6c31f-2f9f-4d57-bd75-7106343ad573",
              "parentUUID": "08ec44bd-86d9-4c70-b73a-4ec216c6b64f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "727443a3-c3e2-4f15-85f8-8fb96ad91962",
            "faf15c31-9099-4702-be13-2b0f6e4fd7fd",
            "c5db27b6-e3df-4154-b5e9-36350c8689a1",
            "eca6c31f-2f9f-4d57-bd75-7106343ad573"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7526,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f727d774-6f21-45fb-9f9d-98df584fb55f",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 6818,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "650a94b1-056d-45bf-94cd-68652c103f0c",
              "parentUUID": "f727d774-6f21-45fb-9f9d-98df584fb55f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5638,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b1292959-1ffa-4e9c-ad15-1407ab95149e",
              "parentUUID": "f727d774-6f21-45fb-9f9d-98df584fb55f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 5542,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "30d2f518-c4bb-4afb-a323-d653b72b10d4",
              "parentUUID": "f727d774-6f21-45fb-9f9d-98df584fb55f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4929,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9fb8b26a-4f43-4ea1-bb39-0b5369280996",
              "parentUUID": "f727d774-6f21-45fb-9f9d-98df584fb55f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4947,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "177da826-ce1c-4b56-a732-79fe8184051a",
              "parentUUID": "f727d774-6f21-45fb-9f9d-98df584fb55f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 5005,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "57474dce-563d-46fa-9c42-48e80575ad05",
              "parentUUID": "f727d774-6f21-45fb-9f9d-98df584fb55f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 5575,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cabeaab4-086b-4ac3-96b2-3919c5deba5b",
              "parentUUID": "f727d774-6f21-45fb-9f9d-98df584fb55f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 10789,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "378b07ff-eb38-4194-9f9c-defd38dbd176",
              "parentUUID": "f727d774-6f21-45fb-9f9d-98df584fb55f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 17922,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bb8dcddb-14ba-4df4-9e7e-41a411a7f91c",
              "parentUUID": "f727d774-6f21-45fb-9f9d-98df584fb55f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "650a94b1-056d-45bf-94cd-68652c103f0c",
            "b1292959-1ffa-4e9c-ad15-1407ab95149e",
            "30d2f518-c4bb-4afb-a323-d653b72b10d4",
            "9fb8b26a-4f43-4ea1-bb39-0b5369280996",
            "177da826-ce1c-4b56-a732-79fe8184051a",
            "57474dce-563d-46fa-9c42-48e80575ad05",
            "cabeaab4-086b-4ac3-96b2-3919c5deba5b",
            "378b07ff-eb38-4194-9f9c-defd38dbd176",
            "bb8dcddb-14ba-4df4-9e7e-41a411a7f91c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 67165,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ca3bb193-6e07-4cd1-a36e-de43935baef6",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 15843,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5d6354a5-29e0-4092-a408-2d38ff56ca2c",
              "parentUUID": "ca3bb193-6e07-4cd1-a36e-de43935baef6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 7155,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "69051402-6a4e-4379-b55b-2fd8e8dfa7f1",
              "parentUUID": "ca3bb193-6e07-4cd1-a36e-de43935baef6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5918,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37039/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37039/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37039/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37039/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37039/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37039/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9aad52e6-dcfa-4ee9-9329-be77e5016a7b",
              "parentUUID": "ca3bb193-6e07-4cd1-a36e-de43935baef6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5d6354a5-29e0-4092-a408-2d38ff56ca2c",
            "69051402-6a4e-4379-b55b-2fd8e8dfa7f1",
            "9aad52e6-dcfa-4ee9-9329-be77e5016a7b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 28916,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "76d0b2d6-988c-42a5-a853-269790e1c234",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 3408,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:37039/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37039/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:37039/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:37039/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:37039/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37039/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37039/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "6d3460dc-712c-46de-aaab-a4db07082c9e",
              "parentUUID": "76d0b2d6-988c-42a5-a853-269790e1c234",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 2895,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:37039/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37039/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:37039/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:37039/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:37039/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37039/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37039/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37039/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37039/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37039/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37039/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37039/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "76353a7a-e485-4f4e-8078-503136bd35b8",
              "parentUUID": "76d0b2d6-988c-42a5-a853-269790e1c234",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6d3460dc-712c-46de-aaab-a4db07082c9e",
            "76353a7a-e485-4f4e-8078-503136bd35b8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}