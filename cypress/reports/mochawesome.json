{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-04-30T11:51:02.882Z",
    "end": "2022-04-30T11:52:28.880Z",
    "duration": 85998,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "00199dbd-62ec-4c7a-9b54-0faab7f44877",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3321b3b2-01fb-4b67-a4c1-caa7df3cbc4f",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 640,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "2123a258-7812-46b0-a59a-c0f0b2bd9c9f",
              "parentUUID": "3321b3b2-01fb-4b67-a4c1-caa7df3cbc4f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2123a258-7812-46b0-a59a-c0f0b2bd9c9f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 640,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebc262e8-7198-45b8-86b5-590d10560e5b",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "840410c5-2896-4198-b539-e4b26c8198ad",
              "parentUUID": "ebc262e8-7198-45b8-86b5-590d10560e5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "bcc02cee-5800-44f3-b64e-7960e65e0079",
              "parentUUID": "ebc262e8-7198-45b8-86b5-590d10560e5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "45c76fa7-588f-4527-9b0c-c5fef31a3b21",
              "parentUUID": "ebc262e8-7198-45b8-86b5-590d10560e5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "89693e83-4583-4041-a69b-a843764c2c96",
              "parentUUID": "ebc262e8-7198-45b8-86b5-590d10560e5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "0f495a78-0772-4429-bf23-2977d0fa8766",
              "parentUUID": "ebc262e8-7198-45b8-86b5-590d10560e5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "62ab5aed-b84f-4166-8311-7201dbbb33a4",
              "parentUUID": "ebc262e8-7198-45b8-86b5-590d10560e5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "e2adbfc7-abf4-44aa-9866-8ccad46da0c8",
              "parentUUID": "ebc262e8-7198-45b8-86b5-590d10560e5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "840410c5-2896-4198-b539-e4b26c8198ad",
            "bcc02cee-5800-44f3-b64e-7960e65e0079",
            "45c76fa7-588f-4527-9b0c-c5fef31a3b21",
            "89693e83-4583-4041-a69b-a843764c2c96",
            "0f495a78-0772-4429-bf23-2977d0fa8766",
            "62ab5aed-b84f-4166-8311-7201dbbb33a4",
            "e2adbfc7-abf4-44aa-9866-8ccad46da0c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1281,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f08acdfc-e211-4322-9da7-13c62df16787",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "32608a4d-1d0c-495a-8d2c-1a2085a2c5ad",
              "parentUUID": "f08acdfc-e211-4322-9da7-13c62df16787",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "f9e5214c-a734-43be-96f4-35a89859ecd2",
              "parentUUID": "f08acdfc-e211-4322-9da7-13c62df16787",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32608a4d-1d0c-495a-8d2c-1a2085a2c5ad",
            "f9e5214c-a734-43be-96f4-35a89859ecd2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 624,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c8d44ee6-99ef-4831-96b3-d0e954826934",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "106f93fd-0bdd-44db-853b-0dce91959e0c",
              "parentUUID": "c8d44ee6-99ef-4831-96b3-d0e954826934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "e622464a-bd3b-4b75-a34e-78dd31774b14",
              "parentUUID": "c8d44ee6-99ef-4831-96b3-d0e954826934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "8e55c610-f478-46dc-80f8-9449f2f1626c",
              "parentUUID": "c8d44ee6-99ef-4831-96b3-d0e954826934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "8e6e4410-4d8f-452a-8a97-fe1270e94e7e",
              "parentUUID": "c8d44ee6-99ef-4831-96b3-d0e954826934",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "106f93fd-0bdd-44db-853b-0dce91959e0c",
            "e622464a-bd3b-4b75-a34e-78dd31774b14",
            "8e55c610-f478-46dc-80f8-9449f2f1626c",
            "8e6e4410-4d8f-452a-8a97-fe1270e94e7e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 994,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f08e435c-a9c6-4fa2-9b48-30b574223478",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "1a7a3c9e-dccc-4972-ba55-87c3fa253c9c",
              "parentUUID": "f08e435c-a9c6-4fa2-9b48-30b574223478",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "77731de6-33af-4faf-93bb-c006cbe89479",
              "parentUUID": "f08e435c-a9c6-4fa2-9b48-30b574223478",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a7a3c9e-dccc-4972-ba55-87c3fa253c9c",
            "77731de6-33af-4faf-93bb-c006cbe89479"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1003,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7c7d912f-6479-4f47-8a00-97623631f7e1",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "4887bf1f-a92e-4d86-bde0-59a0f86397e0",
              "parentUUID": "7c7d912f-6479-4f47-8a00-97623631f7e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "37355d7a-0657-4b83-b789-601eaa9e572f",
              "parentUUID": "7c7d912f-6479-4f47-8a00-97623631f7e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4887bf1f-a92e-4d86-bde0-59a0f86397e0",
            "37355d7a-0657-4b83-b789-601eaa9e572f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 485,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01fe4b75-5054-4093-a8c1-e33ccaec45b6",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "8840d903-83b1-4070-88b5-12606efc64f4",
              "parentUUID": "01fe4b75-5054-4093-a8c1-e33ccaec45b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "45ba228a-1f8b-455b-b87f-775bf59ba227",
              "parentUUID": "01fe4b75-5054-4093-a8c1-e33ccaec45b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8840d903-83b1-4070-88b5-12606efc64f4",
            "45ba228a-1f8b-455b-b87f-775bf59ba227"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9146,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d232a631-e0a0-4de1-9711-9473d8833e1c",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2345,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "c43dcae7-0abb-4803-b487-543f2b4ff3ff",
              "parentUUID": "d232a631-e0a0-4de1-9711-9473d8833e1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "39228d38-9c5c-431c-8da8-0a6c88b3c8ca",
              "parentUUID": "d232a631-e0a0-4de1-9711-9473d8833e1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1733,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "ea76c6f3-120b-4c99-88a8-50ced7fd2aca",
              "parentUUID": "d232a631-e0a0-4de1-9711-9473d8833e1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c43dcae7-0abb-4803-b487-543f2b4ff3ff",
            "39228d38-9c5c-431c-8da8-0a6c88b3c8ca",
            "ea76c6f3-120b-4c99-88a8-50ced7fd2aca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13204,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "18de8a2b-c32a-49c2-819f-0d66db8338a3",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "04f097be-7eca-470c-a1a5-4bf0fd6d564e",
              "parentUUID": "18de8a2b-c32a-49c2-819f-0d66db8338a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "3c99a0f4-c875-4912-a4dd-e2176cc753db",
              "parentUUID": "18de8a2b-c32a-49c2-819f-0d66db8338a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "e3c5a701-0c81-40fa-a88b-f802fb2e4826",
              "parentUUID": "18de8a2b-c32a-49c2-819f-0d66db8338a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2624,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "0cf8daa8-ee87-44d3-b467-230fadf450fd",
              "parentUUID": "18de8a2b-c32a-49c2-819f-0d66db8338a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04f097be-7eca-470c-a1a5-4bf0fd6d564e",
            "3c99a0f4-c875-4912-a4dd-e2176cc753db",
            "e3c5a701-0c81-40fa-a88b-f802fb2e4826",
            "0cf8daa8-ee87-44d3-b467-230fadf450fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3116,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7ad5a7c0-4f11-4b7e-8d83-1fe80c56d025",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4576,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b9e22be8-91d7-40e3-829e-50f6f7686819",
              "parentUUID": "7ad5a7c0-4f11-4b7e-8d83-1fe80c56d025",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4471,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "466f3609-e53b-453f-945e-0260f331dc16",
              "parentUUID": "7ad5a7c0-4f11-4b7e-8d83-1fe80c56d025",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4351,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1ec480c8-a22e-4d8a-bc4a-f9804b06f835",
              "parentUUID": "7ad5a7c0-4f11-4b7e-8d83-1fe80c56d025",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4412,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "166f51f6-7abe-4d8d-ab1e-022c55eefa74",
              "parentUUID": "7ad5a7c0-4f11-4b7e-8d83-1fe80c56d025",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4562,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7767cde3-1264-49d3-a565-f50084a9b925",
              "parentUUID": "7ad5a7c0-4f11-4b7e-8d83-1fe80c56d025",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4461,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e0b8fd03-6406-4228-9909-cee6b7fa6eb5",
              "parentUUID": "7ad5a7c0-4f11-4b7e-8d83-1fe80c56d025",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4398,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "de45d63f-1e9f-4286-b944-da902a35e78e",
              "parentUUID": "7ad5a7c0-4f11-4b7e-8d83-1fe80c56d025",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4425,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "52ce81c6-c783-4b6f-9c0a-e245c9d1ef8e",
              "parentUUID": "7ad5a7c0-4f11-4b7e-8d83-1fe80c56d025",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4402,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "507a6d2a-9494-4004-a7f3-d10d7c133faa",
              "parentUUID": "7ad5a7c0-4f11-4b7e-8d83-1fe80c56d025",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b9e22be8-91d7-40e3-829e-50f6f7686819",
            "466f3609-e53b-453f-945e-0260f331dc16",
            "1ec480c8-a22e-4d8a-bc4a-f9804b06f835",
            "166f51f6-7abe-4d8d-ab1e-022c55eefa74",
            "7767cde3-1264-49d3-a565-f50084a9b925",
            "e0b8fd03-6406-4228-9909-cee6b7fa6eb5",
            "de45d63f-1e9f-4286-b944-da902a35e78e",
            "52ce81c6-c783-4b6f-9c0a-e245c9d1ef8e",
            "507a6d2a-9494-4004-a7f3-d10d7c133faa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40058,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7cc8873c-7a76-47ac-b47b-e5330af8b1c3",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4512,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1f8712b4-1118-496a-8434-818d0ae929e8",
              "parentUUID": "7cc8873c-7a76-47ac-b47b-e5330af8b1c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4454,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "10fd2f69-90bf-4ab8-80a2-bb36b54fc9b9",
              "parentUUID": "7cc8873c-7a76-47ac-b47b-e5330af8b1c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4434,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3a057c12-7db4-4413-9449-8fbdde461340",
              "parentUUID": "7cc8873c-7a76-47ac-b47b-e5330af8b1c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1f8712b4-1118-496a-8434-818d0ae929e8",
            "10fd2f69-90bf-4ab8-80a2-bb36b54fc9b9",
            "3a057c12-7db4-4413-9449-8fbdde461340"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13400,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0b85373e-c293-4a32-ae41-f218194da0e1",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 467,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45343/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45343/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45343/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45343/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45343/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45343/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45343/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "e2cbd5c2-fe8d-45b7-b884-b128d709b369",
              "parentUUID": "0b85373e-c293-4a32-ae41-f218194da0e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 406,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45343/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45343/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45343/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45343/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45343/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45343/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45343/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45343/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d19e9d0f-8480-4268-8d96-e77f2a5d6c21",
              "parentUUID": "0b85373e-c293-4a32-ae41-f218194da0e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e2cbd5c2-fe8d-45b7-b884-b128d709b369",
            "d19e9d0f-8480-4268-8d96-e77f2a5d6c21"
          ],
          "pending": [],
          "skipped": [],
          "duration": 873,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}